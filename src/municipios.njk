---
permalink: "municipios/index.html"
---

{% extends "src/base.njk" %}

{% block head %}
<title>Lab Municipal | Municipios</title>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
{% endblock %}

{% block content %}
<!-- Slider
============================================= -->
<section id="slider" class="slider-element px-2">
    <div class="container" style="padding: 0 0;">
        <div class="row align-items-center">
            <div class="col-lg-6 my-4">
                <h1 class="text-titles" style="font-size: 60px!important;line-height: 60px;">Data Municipal</h1>
                <h3>Explora, Visualiza y Analiza datos municipales de Guatemala</h3>
                <div class="my-4">
                    <input type="text" id="municipioSearch" placeholder="Buscar municipio..." class="form-control">
                </div>
            </div>
            <div class="col-lg-6 my-4">
                <img style="width: 50%; margin: auto;" src="/assets/img/interoperabilidad/SLIDER 02.png">
            </div>
        </div>
    </div>
</section>

<!-- Filtros por Departamento y Municipio -->
<section class="px-2" style="background-color: #fff;">
    <div class="container my-4">
        <div class="row">
            <div class="col-lg-4">
                <label for="departamentoFilter">Departamento:</label>
                <select id="departamentoFilter" class="form-control">
                    <option value="">Todos los Departamentos</option>
                    {% set departamentos = [] %}
                    {% for m in collections.municipio %}
                        {% if m.data.municipio.departamento not in departamentos %}
                            {% set departamentos = departamentos.concat([m.data.municipio.departamento]) %}
                        {% endif %}
                    {% endfor %}
                    {% for d in departamentos %}
                        <option value="{{ d }}">{{ d }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="col-lg-4">
                <label for="municipioFilter">Municipio:</label>
                <select id="municipioFilter" class="form-control" disabled>
                    <option value="">Todos los Municipios</option>
                </select>
            </div>
            <div class="col-lg-4 d-flex ">
                <button id="buscarBtn" class="btn  mr-2">Buscar</button>
                <button id="limpiarBtn" class="btn">Limpiar</button>
            </div>
        </div>
    </div>
</section>


<!-- Lista de Municipios
============================================= -->
<section class="px-2" style="background-color: #fff;">
    <div class="container clearfix">
        <div class="row py-4 align-items-center" id="municipioList">
            {% for municipio in collections.municipio %}
            <div class="col-lg-3 my-2 municipio-item"
                 data-departamento="{{ municipio.data.municipio.departamento | lower }}"
                 data-municipio="{{ municipio.data.municipio.municipio | lower }}">
                <a href="{{ municipio.url }}">
                    <div class="municipio_box">
                        <div class="text">
                            <h2><i class="fa-solid fa-circle-dot"></i> Departamento: </h2>
                            <p>{{ municipio.data.municipio.departamento }}</p>
                            <h2><i class="fa-solid fa-circle-dot"></i> Municipio: </h2>
                            <p>{{ municipio.data.municipio.municipio }}</p>
                            <h2><i class="fa-solid fa-circle-dot"></i> Partido: </h2>
                            <p>{{ municipio.data.municipio.adjudicaciones.adjudicaciones[0].corporacion_municipal | capitalize}}</p>
                            <h2><i class="fa-solid fa-circle-dot"></i> Alcalde: </h2>
                            <p>{{ municipio.data.municipio.adjudicaciones.adjudicaciones[0].nombre | capitalize}}</p>
                        </div>
                    </div>
                </a>
            </div>
            {% endfor %}
        </div>

        <!-- Contenedor para la paginación -->
        <div class="pagination-container" id="paginationControls">
            <!-- Los botones se generarán dinámicamente -->
        </div>
    </div>
</section>

<script>
    $(document).ready(function() {
        var itemsPerPage = 12;
        var currentPage = 1;
        var $items = $('#municipioList .municipio-item');

        // Obtenemos lista de municipios por departamento para cargar dinámicamente
        var municipiosPorDepartamento = {};
        $items.each(function() {
            var dep = $(this).data('departamento');
            var mun = $(this).data('municipio');
            if (!municipiosPorDepartamento[dep]) {
                municipiosPorDepartamento[dep] = [];
            }
            if (!municipiosPorDepartamento[dep].includes(mun)) {
                municipiosPorDepartamento[dep].push(mun);
            }
        });

        // Función para normalizar texto removiendo tildes/acentos
        function normalizeText(str) {
            return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "").toLowerCase();
        }

        // Genera los botones de paginación dinámicamente
        function renderPagination(totalPages) {
            var $pagination = $('#paginationControls');
            $pagination.empty();

            // Botón Anterior
            var $prevBtn = $('<button class="pagination-button" id="prevPage">Anterior</button>');
            $prevBtn.prop('disabled', currentPage === 1);
            $pagination.append($prevBtn);

            // Primera página (siempre)
            if (totalPages > 0) {
                var $firstPageBtn = $('<button class="pagination-button page-btn">1</button>');
                $firstPageBtn.addClass(currentPage === 1 ? 'active' : '');
                $pagination.append($firstPageBtn);
            }

            // Página anterior a la actual (si corresponde)
            if (currentPage - 1 > 1 && currentPage - 1 < totalPages) {
                var $prevPageBtn = $('<button class="pagination-button page-btn">' + (currentPage - 1) + '</button>');
                $prevPageBtn.addClass('page-btn');
                $pagination.append($prevPageBtn);
            }

            // Página actual (si no es ni la primera ni la última ya mostrada)
            if (currentPage > 1 && currentPage < totalPages) {
                var $currentPageBtn = $('<button class="pagination-button page-btn active">' + currentPage + '</button>');
                $pagination.append($currentPageBtn);
            }

            // Página siguiente a la actual (si corresponde)
            if (currentPage + 1 > 1 && currentPage + 1 < totalPages) {
                var $nextPageBtn = $('<button class="pagination-button page-btn">' + (currentPage + 1) + '</button>');
                $pagination.append($nextPageBtn);
            }

            // Última página (siempre que no coincida con la primera y si totalPages > 1)
            if (totalPages > 1) {
                var $lastPageBtn = $('<button class="pagination-button page-btn">' + totalPages + '</button>');
                $lastPageBtn.addClass(currentPage === totalPages ? 'active' : '');
                $pagination.append($lastPageBtn);
            }

            // Botón Siguiente
            var $nextBtn = $('<button class="pagination-button" id="nextPage">Siguiente</button>');
            $nextBtn.prop('disabled', currentPage === totalPages || totalPages === 0);
            $pagination.append($nextBtn);

            // Evento para botones de página
            $('.page-btn').not('.active').on('click', function() {
                var pageNum = parseInt($(this).text());
                if (!isNaN(pageNum)) {
                    currentPage = pageNum;
                    updateList();
                }
            });

            // Eventos botones anterior y siguiente
            $('#prevPage').on('click', function() {
                if (currentPage > 1) {
                    currentPage--;
                    updateList();
                }
            });

            $('#nextPage').on('click', function() {
                if (currentPage < totalPages) {
                    currentPage++;
                    updateList();
                }
            });
        }

        // Función para filtrar en base a la búsqueda, departamento y municipio seleccionados
        function filterItems() {
            var searchText = normalizeText($('#municipioSearch').val() || '');
            var selectedDep = normalizeText($('#departamentoFilter').val());
            var selectedMun = normalizeText($('#municipioFilter').val());

            var filtered = $items.filter(function() {
                var itemText = normalizeText($(this).text());
                var itemDep = $(this).data('departamento');
                var itemMun = $(this).data('municipio');

                var matchesSearch = itemText.includes(searchText);
                var matchesDep = (selectedDep === '' || itemDep === selectedDep);
                var matchesMun = (selectedMun === '' || itemMun === selectedMun);

                return matchesSearch && matchesDep && matchesMun;
            });

            return filtered;
        }

        // Función para actualizar la lista mostrada en base a filtros y paginación
        function updateList() {
            var filteredItems = filterItems();

            // Ocultamos todos los items
            $items.hide();

            // Calculamos el total de páginas en base a los items filtrados
            var totalItems = filteredItems.length;
            var totalPages = Math.ceil(totalItems / itemsPerPage);

            // Ajustamos currentPage si excede el total de páginas
            if (currentPage > totalPages && totalPages > 0) {
                currentPage = totalPages;
            } else if (totalPages === 0) {
                currentPage = 1;
            }

            var startIndex = (currentPage - 1) * itemsPerPage;
            var endIndex = startIndex + itemsPerPage;

            // Mostramos sólo los items de la página actual
            filteredItems.slice(startIndex, endIndex).show();

            // Renderizamos la paginación
            renderPagination(totalPages);
        }

        // Evento al escribir en el buscador
        $('#municipioSearch').on('input', function() {
            currentPage = 1;
            updateList();
        });

        // Evento al cambiar departamento
        $('#departamentoFilter').on('change', function() {
            var dep = normalizeText($(this).val());
            var $municipioFilter = $('#municipioFilter');
            $municipioFilter.empty().append('<option value="">Todos los Municipios</option>');

            if (dep !== '' && municipiosPorDepartamento[dep]) {
                // Habilita y carga municipios del departamento seleccionado
                $municipioFilter.prop('disabled', false);
                municipiosPorDepartamento[dep].sort().forEach(function(m) {
                    // Convertir m a su forma original (si fuera necesario)
                    // Aquí se asume que ya está normalizado.
                    $municipioFilter.append('<option value="'+ m +'">'+ capitalize(m) +'</option>');
                });
            } else {
                // Si no hay departamento seleccionado o no hay municipios
                $municipioFilter.prop('disabled', true);
            }
        });

        // Botón buscar
        $('#buscarBtn').on('click', function() {
            currentPage = 1;
            updateList();
        });

        // Botón limpiar
        $('#limpiarBtn').on('click', function() {
            $('#municipioSearch').val('');
            $('#departamentoFilter').val('');
            $('#municipioFilter').val('').prop('disabled', true);
            currentPage = 1;
            updateList();
        });

        // Función auxiliar para capitalizar texto
        function capitalize(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
        }

        // Inicializamos la vista
        updateList();
    });
</script>
{% endblock %}
